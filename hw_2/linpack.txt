wget https://raw.githubusercontent.com/panticz/scripts/master/run_linpack.sh -qO- | bash

This is a SAMPLE run script for running a shared-memory version of
Intel(R) Distribution for LINPACK* Benchmark. Change it to reflect
the correct number of CPUs/threads, problem input files, etc..
*Other names and brands may be claimed as the property of others.
./runme_xeon64: 28: [: -gt: unexpected operator
Ср 07 окт 2020 11:52:24 MSK
Sample data file lininput_xeon64.

Current date/time: Wed Oct  7 11:52:24 2020

CPU frequency:    3.590 GHz
Number of CPUs: 1
Number of cores: 4
Number of threads: 4

Parameters are set to:

Number of tests: 15
Number of equations to solve (problem size) : 1000  2000  5000  10000 15000 18000 20000 22000 25000 26000 27000 30000 35000 40000 45000
Leading dimension of array                  : 1000  2000  5008  10000 15000 18008 20016 22008 25000 26000 27000 30000 35000 40000 45000
Number of trials to run                     : 4     2     2     2     2     2     2     2     2     2     1     1     1     1     1    
Data alignment value (in Kbytes)            : 4     4     4     4     4     4     4     4     4     4     4     1     1     1     1    

Maximum memory requested that can be used=16200901024, at the size=45000

=================== Timing linear equation system solver ===================

Size   LDA    Align. Time(s)    GFlops   Residual     Residual(norm) Check
1000   1000   4      0.007      93.6268  1.502479e-12 5.123838e-02   pass
1000   1000   4      0.007      89.4892  1.502479e-12 5.123838e-02   pass
1000   1000   4      0.007      90.5203  1.502479e-12 5.123838e-02   pass
1000   1000   4      0.009      75.1478  1.502479e-12 5.123838e-02   pass
2000   2000   4      0.060      89.1112  5.141276e-12 4.472280e-02   pass
2000   2000   4      0.063      84.8435  5.141276e-12 4.472280e-02   pass
5000   5008   4      0.736      113.2230 2.567213e-11 3.579772e-02   pass
5000   5008   4      0.740      112.6245 2.567213e-11 3.579772e-02   pass
10000  10000  4      5.108      130.5434 1.034086e-10 3.646293e-02   pass
10000  10000  4      5.069      131.5453 1.034086e-10 3.646293e-02   pass
15000  15000  4      15.944     141.1492 2.206862e-10 3.475844e-02   pass
15000  15000  4      17.269     130.3206 2.206862e-10 3.475844e-02   pass
18000  18008  4      28.403     136.9078 2.839891e-10 3.110030e-02   pass
18000  18008  4      27.549     141.1529 2.839891e-10 3.110030e-02   pass
20000  20016  4      37.707     141.4626 3.839458e-10 3.398761e-02   pass
20000  20016  4      37.435     142.4920 3.839458e-10 3.398761e-02   pass
22000  22008  4      49.283     144.0595 4.191068e-10 3.069793e-02   pass
22000  22008  4      49.236     144.1969 4.191068e-10 3.069793e-02   pass
25000  25000  4      72.145     144.4016 5.526876e-10 3.142937e-02   pass
25000  25000  4      71.475     145.7551 5.526876e-10 3.142937e-02   pass
26000  26000  4      80.015     146.4558 6.643859e-10 3.493541e-02   pass
26000  26000  4      80.061     146.3726 6.643859e-10 3.493541e-02   pass
27000  27000  4      89.131     147.2373 6.191166e-10 3.019127e-02   pass
30000  30000  1      120.974    148.8075 8.044883e-10 3.171301e-02   pass
35000  35000  1      192.227    148.7084 1.155255e-09 3.353531e-02   pass
40000  40000  1      279.508    152.6605 1.430789e-09 3.182123e-02   pass

На 45000 по оперативной памяти не съедает, загрузка по памяти 100%, а нагрузка с процессоров спадает почти до 0 
